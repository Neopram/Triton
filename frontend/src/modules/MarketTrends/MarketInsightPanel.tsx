// C:\Users\feder\Desktop\MaritimeAPP\frontend\src\modules\MarketTrends\MarketInsightPanel.tsx

import React, { useState } from 'react';
import { Card, CardContent } from '../../components/ui/card';
import { Button } from '../../components/ui/button';
import { Lightbulb, Upload, Loader, Star } from 'lucide-react';
import { format } from 'date-fns';
import InsightFeedback from '../../components/InsightFeedback';

interface MarketInsightPanelProps {
  insight: any | null;
  loading: boolean;
  onAnalyzeNew: () => void;
}

const MarketInsightPanel: React.FC<MarketInsightPanelProps> = ({ 
  insight, 
  loading, 
  onAnalyzeNew 
}) => {
  const [showFeedback, setShowFeedback] = useState(false);
  
  if (loading) {
    return (
      <div className="flex items-center justify-center py-12">
        <Loader className="animate-spin text-gray-500 mr-2" size={24} />
        <span>Loading latest insights...</span>
      </div>
    );
  }
  
  if (!insight) {
    return (
      <div className="text-center py-12">
        <div className="mb-4">
          <Lightbulb size={48} className="mx-auto text-gray-400" />
        </div>
        <h3 className="text-lg font-medium mb-2">No insights available yet</h3>
        <p className="text-gray-500 mb-6">
          Upload a market report to generate AI-powered insights
        </p>
        <Button onClick={onAnalyzeNew} className="flex items-center gap-2 mx-auto">
          <Upload size={16} />
          Upload Report
        </Button>
      </div>
    );
  }
  
  const formattedDate = format(new Date(insight.created_at), 'MMMM d, yyyy â€¢ h:mm a');
  
  return (
    <div className="space-y-4">
      <div className="flex justify-between items-start">
        <div>
          <h3 className="text-lg font-medium">Latest Market Insights</h3>
          <p className="text-sm text-gray-500">Generated {formattedDate}</p>
          <div className="flex items-center mt-1">
            <p className="text-xs text-gray-400 mr-3">
              Generated by {insight.engine_used || 'AI'}
            </p>
            {insight.rating && (
              <div className="flex items-center">
                <Star size={14} className="text-yellow-500 fill-yellow-500" />
                <span className="text-xs ml-1">{insight.rating.toFixed(1)}</span>
              </div>
            )}
          </div>
        </div>
        <div className="flex gap-2">
          <Button onClick={() => setShowFeedback(!showFeedback)} size="sm" variant="outline" className="flex items-center gap-1">
            <Star size={14} />
            {showFeedback ? 'Hide Feedback' : 'Rate Insight'}
          </Button>
          <Button onClick={onAnalyzeNew} size="sm" className="flex items-center gap-1">
            <Upload size={14} />
            New Analysis
          </Button>
        </div>
      </div>
      
      <Card>
        <CardContent className="pt-6">
          {showFeedback ? (
            <InsightFeedback 
              insightId={insight.id}
              currentRating={insight.rating}
              currentFeedback={insight.feedback}
              onFeedbackSubmitted={() => setShowFeedback(false)}
            />
          ) : (
            <div className="prose max-w-none">
              {insight.insights.split('\n').map((paragraph: string, idx: number) => (
                <p key={idx}>{paragraph}</p>
              ))}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default MarketInsightPanel;